/* pseudo selectores

empiezan con dos puntos

no exiten en html
*/
:root {
	/* aqui declaro unas variables globalres para que pueda usarlo y si quiero modificar pues solamente entro aqui para no cambiar uno por uno */
	--blanco: #ffffff;
	--oscuro: #212121;
	--primario: #ffc107;
	--secundario: #0097a7;
	--gris: #757575;
	--gris_claro: #dfe9f3;

	--Fuente-principal: 3.8rem;
}

/*
    Partes de CSS
    Regla de css
    h1 = selector

    Declaracion
        color=propiedad
        red=valor
*/

/*NOTA: PARA HTML Y BODY nos ayuda a mejorar la utilizacion de los rem
por que en la actulidad ya tenemos muchas pantalla diferentes como pequeñas como grandes

para que se pueda adaptar mejor a las diferentes pantallas
*/

/* Globales */
html {
	/* aqui lo que vamos hacer es mejorar el uso de model box de css 
    aqui por ejemplo si uso
    height
    y un padding
    no va a afectar ese pading el tamano del elemento
    */
	box-sizing: border-box;
	font-size: 62.5%;
	/* este el efecto de scroll primero va en que eje y despues el estitlo */
	scroll-snap-type: y mandatory;
}

/* 
    el primer * es selecionar todos elmentos de html
    la coma es para que puedes usar el mismo codigo para juntar las clases
    el beforce y al after son pseudo elementos que no existe
    y si se aplica alguno de ellos en tu elemntos entonces tambien lo aplicara
*/
*,
*:before,
*:after {
	box-sizing: inherit;
}
body {
	font-size: 16px; /*1REM = 10 PX*/
	font-family: 'Krub', sans-serif;
	/* para hacer un degradado  */
	/* lo primero que debes que pasar es de donde a donde va el degradado */
	/* depues el color
    y desde donde inicia 
    despuse el color donde va ir
    100%*/
	/* es porcentaje es como va el cambio de color */
	background-image: linear-gradient(
		to top,
		var(--gris_claro) 0%,
		var(--blanco) 100%
	);
}

.contenedor {
	/* lo que aqui hago es el contenerdor tengo maximo de ancho de 120rem para que pueda centra la barra */
	max-width: 120rem;
	/*
    agrego margen 
    margin-top: 0;
    margin-right: auto;
    margin-bottom: 0;
    margin-left: auto;
    
    es igual a 
    */
	margin: 0 auto 0 auto;
}

.sombra {
	/* para compatiblidad */
	/*https://caniuse.com/  */

	/* https://www.cssmatic.com/box-shadow */

	/* -webkit-box-shadow y -moz-box-shadow es un prefijo */
	-webkit-box-shadow: 0px 5px 15px 0px rgba(94, 94, 94, 0.54);
	-moz-box-shadow: 0px 5px 15px 0px rgba(94, 94, 94, 0.54);
	box-shadow: 0px 5px 15px 0px rgba(94, 94, 94, 0.54);
	background-color: var(--blanco);
	padding: 2rem;
	border-radius: 1rem;
}

.boton {
	/* colores de fondo y letra */
	background-color: var(--secundario);
	color: var(--blanco);
	/*padding: 1rem 3rem;  */
	padding: 1rem 3rem 1rem 3rem;
	/* margen para separar */
	margin-top: 3rem;
	/* tamano de texto */
	font-size: 2rem;
	/* quitar el subrayado */
	text-decoration: none;
	/* para cambiar a minusculas, mayus etc */
	text-transform: uppercase;
	/* cambio de texto en este caso en negritas */
	font-weight: bold;
	border-radius: 0.5rem;
	width: 90%;
	text-align: center;
	border: none;
}
@media (min-width: 768px) {
	.boton {
		/* es mas o menos en pocas palabras que va hacer reset del 90% */
		width: auto;
	}
}
/* cuando le das estilos a los input eliminara la manita al pasar el curso en el asi que se usara hover como se muestra abajo */
.boton:hover {
	cursor: pointer;
}

/* tipografia */
h1 {
	font-size: 3.8rem;
}

h2 {
	font-size: 2.8rem;
}

h3 {
	font-size: 1.8rem;
}

h1,
h2,
h3 {
	text-align: center;
}

/* titulos */
.titulo span {
	/* cambio el tamano de letra de la equita span que esta dentro de h1 para que se vea diferente el tamano con respecto al h1 */
	font-size: 2rem;
}

/* utilidades*/
.w_sm_100 {
	width: 100%;
}
@media (min-width: 768px) {
	.w_sm_100 {
		width: auto;
	}
}
.alinear_derecha {
	justify-content: flex-end;
}

.flex {
	display: flex;
}

/* navegacion principal */
.nav_bg {
	/* agrego color para la barra de navegacion */
	background-color: var(--secundario);
}

.navegacion_principal {
	/* uso el flex para modificar la posicion que estara
    en este caso es cuando este pequena la pantalla 
    se muestre en forma columna los elementos
    */
	display: flex;
	flex-direction: column;
}
/*
    en los @medias queries

        algunos tamaños estandar para pantallas

                480px para telefonos
                768 para una tablet
                1140 - 1400 para laptop o pc
*/
@media (min-width: 768px) {
	.navegacion_principal {
		/* aqui si es mayor de 768px entonces se mostra en filas (en forma horizontal) */
		flex-direction: row;
		/* aqui lo      justify-content: space-between; 
    lo que hace es posicionar los texto de manera horizotal 
    */
		/* distribuye los elementos */
		justify-content: space-between;
	}
}

.navegacion_principal a {
	/* aqui es para que cada elemento ocupe verticalmente
    y el center para central el texto */
	display: block;
	text-align: center;
	/* para que el cuadro este centrado el texto */
	padding: 1rem;

	color: var(--blanco);
	text-decoration: none; /*para quitar el subrayado de los "a"* (enlances*/
	/* tamano */
	font-size: 2rem;
	/* tipo de letra */
	font-weight: bold; /*es igual a 700*/
}
/*EVENTOS DE CSS*/
.navegacion_principal a:hover {
	/* este evento lo que hace es cuando pase el curso arriba de los enlaces cambio de color */
	background-color: var(--primario);
	color: var(--oscuro);
}

/* HERO */
.hero {
	/* para los dos puntos son para salirse de la carpeta por que estoy dentro de la carpeta de css */
	background-image: url('../img/hero.jpg');
	/* para que no se repita varias veces la misma imagen */
	background-repeat: no-repeat;
	/* para que abarque toda la pantalla la imagen */
	background-size: cover;
	/* tamano de la imagen y el padding */
	height: 450px;

	/* posicion relativa y absoluta
    el padre debe que tener posicion relativa */
	position: relative;
	margin-bottom: 2rem;
}

.contenedor_hero {
	position: absolute;

	/* para cordenadas se usa
    top
    buttom
    left
    right */
	/* para tener transparencia usaremos rgba donde el ultimo valor va de 0 a 1
    donde 0 es transparente
    y 1 donde no es transparente */
	background-color: rgba(0, 0, 0, 0.5);
	/*
    es lo mismo de arriba
     background-color: rgb(0 0 0 /50%); */
	height: 100%;
	width: 100%;

	/* 
    cuando usar flex 
    flex-direction: row;
    centras horizontalmente
    con  justify-content
    
    y verticalmente con 
    align-items

    cuando usar flex 
    flex-direction: column;
    centras verticalmente
    con  justify-content
    
    y horizontal con 
    align-items

    */

	/* IMPORTANTE SI QUIERES ALINEAR COSAS */
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.contenedor_hero h2,
.contenedor_hero p {
	color: var(--blanco);
}

.contenedor_hero .ubicacion {
	/* para aligiar verticalmente */
	display: flex;
	align-items: flex-end;
}
/* en esta parte debemos indicar en que secciones debemos que se haga scroll
debemos poner todas ya que si no puede se bloqueara y no podrá bajar o subir */
.mis_servicios,
.navegacion_principal,
.formulario {
	/* en esta parte se pondrá en donde se pondrá el scroll */
	scroll-snap-align: center;
	scroll-snap-stop: always;
}
@media (min-width: 768px) {
	.mis_servicios {
		/* usando grid para los servicios para el posicionamiento */
		/* grid nos permite definir la ubicación y el tamano */
		/* diferencia de flex se posiciona automáticamente mediante cree
         GRID el contenido se agrupan mediante una area definida*/
		display: grid;
		/* 
        grid-template-
         columns lo que haces es decir cuantas columnas son y de que medida
         rows lo que hace es decir cuantas filas son y de que medida 
        
         */
		/*
        ESTO ES IGUAL A ....
        grid-template-columns: 30rem 30rem;
        grid-template-rows: 20rem 80rem; */
		/* grid: 200px 800px / 300px 300px; */

		/* 
            este código es igual a usarlo con fracciones la notación es fr    
        grid-template-columns: 33.3% 33.3% 33.3%; */

		/*  si te da flojera escribir 3 veces 1fr */
		/* grid-template-columns: 1fr 1fr 1fr; */

		grid-template-columns: repeat(3, 1fr);

		/* otra manera mas fácil de usar y con menos código es con
        GORID:
                primero son los rows (las columnas) dividiendo con una "/" para hacer el cambio para columnas */

		/* para separar objetos dentro de grid sin necesitad de usar margenes y padding 
        
        es como un margen*/
		column-gap: 1rem;
	}
}

.servico_section {
	display: flex;
	flex-direction: column;
	align-items: center;
}

.servico_section h3 {
	color: var(--secundario);
	font-weight: normal;
}

.servico_section p {
	line-height: 2;
	text-align: center;
}

.servico_section .iconos {
	height: 15rem;
	width: 15rem;
	background-color: var(--primario);
	/* para hacer círculos se hace asi */
	border-radius: 50%;
	display: flex;
	justify-content: space-evenly;
	align-items: center;
}

.formulario {
	background-color: var(--gris);
	/* utiliza el valor mínimo*/
	/* compara si es mas pequeño 600px o 1120
    entonces tomara 60rem */
	width: min(60rem, 100%);
	/* cuando usamos este es cuando el padre no tiene display flex por que tiene display block */
	margin: 0 auto;
	padding: 2rem;
	border-radius: 1rem;
}

.formulario fieldset {
	border: none;
}
.formulario legend {
	text-align: center;
	font-size: 1.8rem;
	text-transform: uppercase;
	color: var(--primario);
	font-weight: bold;
	margin-bottom: 2rem;
}

@media (min-width: 768px) {
	.contenedor_campos {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		grid-template-rows: auto auto 20rem;
		column-gap: 1rem;
	}
	.campo:nth-child(3),
	.campo:nth-child(4) {
		grid-column: 1/3;
	}
}

.campo {
	margin-bottom: 1rem;
}

.campo label {
	color: var(--blanco);
	font-weight: bold;
	margin-bottom: 0.5rem;
	display: block;
}

/* es un selector que esta en el campo que es input que es de tipo texto */
/* .campo input[type="text"]{
    background-color: red;
} */

.campo textarea {
	height: 20rem;
}
.campo .input_text {
	width: 100%;
	border: none;
	padding: 1.5rem;
	border-radius: 0.5rem;
}

/* footer */
.footer {
	text-align: center;
}
